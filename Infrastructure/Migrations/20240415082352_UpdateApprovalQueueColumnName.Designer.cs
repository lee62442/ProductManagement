// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ProductManagementDbContext))]
    [Migration("20240415082352_UpdateApprovalQueueColumnName")]
    partial class UpdateApprovalQueueColumnName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.ApprovalRequest", b =>
                {
                    b.Property<int>("ApprovalRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalRequestId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.HasKey("ApprovalRequestId");

                    b.HasIndex("ProductId");

                    b.ToTable("ApprovalQueue");

                    b.HasData(
                        new
                        {
                            ApprovalRequestId = 1,
                            ProductId = 1,
                            RequestDate = new DateTime(2024, 3, 18, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(760),
                            RequestReason = "Price change/Update request",
                            RequestType = 2
                        },
                        new
                        {
                            ApprovalRequestId = 2,
                            ProductId = 2,
                            RequestDate = new DateTime(2024, 3, 26, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(770),
                            RequestReason = "Price change/Update request",
                            RequestType = 2
                        },
                        new
                        {
                            ApprovalRequestId = 3,
                            ProductId = 6,
                            RequestDate = new DateTime(2024, 3, 22, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(790),
                            RequestReason = "Price change/Update request",
                            RequestType = 2
                        },
                        new
                        {
                            ApprovalRequestId = 4,
                            ProductId = 8,
                            RequestDate = new DateTime(2024, 4, 12, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(800),
                            RequestReason = "New product",
                            RequestType = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = false,
                            Name = "Widget 1",
                            PostedDate = new DateTime(2023, 12, 23, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(690),
                            Price = 553.40999999999997
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            Name = "Thingamajig 2",
                            PostedDate = new DateTime(2024, 1, 21, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(770),
                            Price = 319.43000000000001
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Thingamajig 3",
                            PostedDate = new DateTime(2023, 10, 19, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(780),
                            Price = 19.699999999999999
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Gadget 4",
                            PostedDate = new DateTime(2024, 2, 24, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(780),
                            Price = 352.61000000000001
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Gadget 5",
                            PostedDate = new DateTime(2023, 6, 24, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(780),
                            Price = 155.34999999999999
                        },
                        new
                        {
                            Id = 6,
                            IsActive = false,
                            Name = "Thingamajig 6",
                            PostedDate = new DateTime(2024, 3, 16, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(790),
                            Price = 828.87
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Gadget 7",
                            PostedDate = new DateTime(2024, 2, 3, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(800),
                            Price = 136.75
                        },
                        new
                        {
                            Id = 8,
                            IsActive = false,
                            Name = "Doohickey 8",
                            PostedDate = new DateTime(2023, 4, 25, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(800),
                            Price = 591.77999999999997
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Gadget 9",
                            PostedDate = new DateTime(2024, 3, 11, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(810),
                            Price = 878.25
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Gadget 10",
                            PostedDate = new DateTime(2023, 11, 4, 1, 23, 52, 492, DateTimeKind.Local).AddTicks(810),
                            Price = 331.51999999999998
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.ApprovalRequest", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
