// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ProductManagementDbContext))]
    [Migration("20240415081857_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.ApprovalRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ApprovalQueue");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            RequestDate = new DateTime(2024, 3, 20, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1380),
                            RequestReason = "Delete request",
                            RequestType = 3
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 3,
                            RequestDate = new DateTime(2024, 4, 12, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1400),
                            RequestReason = "Price change/Update request",
                            RequestType = 2
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 4,
                            RequestDate = new DateTime(2024, 3, 20, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1400),
                            RequestReason = "New product",
                            RequestType = 1
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 7,
                            RequestDate = new DateTime(2024, 3, 25, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1420),
                            RequestReason = "Delete request",
                            RequestType = 3
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = false,
                            Name = "Thingamajig 1",
                            PostedDate = new DateTime(2023, 8, 20, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1330),
                            Price = 405.02999999999997
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Doohickey 2",
                            PostedDate = new DateTime(2023, 8, 27, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1390),
                            Price = 408.08999999999997
                        },
                        new
                        {
                            Id = 3,
                            IsActive = false,
                            Name = "Doohickey 3",
                            PostedDate = new DateTime(2023, 5, 27, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1400),
                            Price = 598.55999999999995
                        },
                        new
                        {
                            Id = 4,
                            IsActive = false,
                            Name = "Doohickey 4",
                            PostedDate = new DateTime(2023, 7, 9, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1400),
                            Price = 562.71000000000004
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Widget 5",
                            PostedDate = new DateTime(2023, 9, 28, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1410),
                            Price = 84.450000000000003
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Gadget 6",
                            PostedDate = new DateTime(2024, 1, 7, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1410),
                            Price = 990.32000000000005
                        },
                        new
                        {
                            Id = 7,
                            IsActive = false,
                            Name = "Gadget 7",
                            PostedDate = new DateTime(2024, 2, 25, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1420),
                            Price = 346.5
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Widget 8",
                            PostedDate = new DateTime(2023, 8, 20, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1420),
                            Price = 809.28999999999996
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Thingamajig 9",
                            PostedDate = new DateTime(2023, 9, 13, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1420),
                            Price = 968.04999999999995
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Gadget 10",
                            PostedDate = new DateTime(2023, 11, 13, 1, 18, 57, 622, DateTimeKind.Local).AddTicks(1430),
                            Price = 867.75
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.ApprovalRequest", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
