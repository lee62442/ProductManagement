// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ProductManagementDbContext))]
    partial class ProductManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.ApprovalRequest", b =>
                {
                    b.Property<int>("ApprovalRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalRequestId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.HasKey("ApprovalRequestId");

                    b.HasIndex("ProductId");

                    b.ToTable("ApprovalRequest");

                    b.HasData(
                        new
                        {
                            ApprovalRequestId = 1,
                            ProductId = 2,
                            RequestDate = new DateTime(2024, 3, 31, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(490),
                            RequestReason = "Price change/Update request",
                            RequestType = 2
                        },
                        new
                        {
                            ApprovalRequestId = 2,
                            ProductId = 4,
                            RequestDate = new DateTime(2024, 4, 4, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(500),
                            RequestReason = "Price change/Update request",
                            RequestType = 2
                        },
                        new
                        {
                            ApprovalRequestId = 3,
                            ProductId = 5,
                            RequestDate = new DateTime(2024, 4, 7, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(510),
                            RequestReason = "Delete request",
                            RequestType = 3
                        },
                        new
                        {
                            ApprovalRequestId = 4,
                            ProductId = 6,
                            RequestDate = new DateTime(2024, 3, 31, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(510),
                            RequestReason = "New product",
                            RequestType = 1
                        },
                        new
                        {
                            ApprovalRequestId = 5,
                            ProductId = 7,
                            RequestDate = new DateTime(2024, 3, 23, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(520),
                            RequestReason = "New product",
                            RequestType = 1
                        },
                        new
                        {
                            ApprovalRequestId = 6,
                            ProductId = 10,
                            RequestDate = new DateTime(2024, 4, 8, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(530),
                            RequestReason = "Price change/Update request",
                            RequestType = 2
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Doohickey 1",
                            PostedDate = new DateTime(2024, 2, 26, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(430),
                            Price = 754.0
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            Name = "Thingamajig 2",
                            PostedDate = new DateTime(2023, 7, 3, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(480),
                            Price = 217.18000000000001
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Doohickey 3",
                            PostedDate = new DateTime(2023, 10, 18, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(500),
                            Price = 13.93
                        },
                        new
                        {
                            Id = 4,
                            IsActive = false,
                            Name = "Doohickey 4",
                            PostedDate = new DateTime(2023, 11, 16, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(500),
                            Price = 723.15999999999997
                        },
                        new
                        {
                            Id = 5,
                            IsActive = false,
                            Name = "Gadget 5",
                            PostedDate = new DateTime(2023, 9, 13, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(500),
                            Price = 496.99000000000001
                        },
                        new
                        {
                            Id = 6,
                            IsActive = false,
                            Name = "Gadget 6",
                            PostedDate = new DateTime(2024, 2, 21, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(510),
                            Price = 794.32000000000005
                        },
                        new
                        {
                            Id = 7,
                            IsActive = false,
                            Name = "Thingamajig 7",
                            PostedDate = new DateTime(2023, 12, 5, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(520),
                            Price = 862.36000000000001
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Gadget 8",
                            PostedDate = new DateTime(2023, 12, 28, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(520),
                            Price = 984.16999999999996
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Doohickey 9",
                            PostedDate = new DateTime(2023, 7, 12, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(530),
                            Price = 646.63999999999999
                        },
                        new
                        {
                            Id = 10,
                            IsActive = false,
                            Name = "Gadget 10",
                            PostedDate = new DateTime(2023, 7, 11, 1, 32, 25, 293, DateTimeKind.Local).AddTicks(530),
                            Price = 591.60000000000002
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.ApprovalRequest", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
